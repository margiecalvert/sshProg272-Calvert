0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'jasmine-node' ]
2 info using npm@1.3.24
3 info using node@v0.10.25
4 verbose node symlink /usr/bin/node
5 verbose cache add [ 'jasmine-node', null ]
6 verbose cache add name=undefined spec="jasmine-node" args=["jasmine-node",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'jasmine-node',
7 verbose parsed url   path: 'jasmine-node',
7 verbose parsed url   href: 'jasmine-node' }
8 silly lockFile bba04ce4-jasmine-node jasmine-node
9 verbose lock jasmine-node /home/adminuser/.npm/bba04ce4-jasmine-node.lock
10 silly lockFile bba04ce4-jasmine-node jasmine-node
11 silly lockFile bba04ce4-jasmine-node jasmine-node
12 verbose addNamed [ 'jasmine-node', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile b74de4f8-jasmine-node jasmine-node@
15 verbose lock jasmine-node@ /home/adminuser/.npm/b74de4f8-jasmine-node.lock
16 silly addNameRange { name: 'jasmine-node', range: '*', hasData: false }
17 verbose url raw jasmine-node
18 verbose url resolving [ 'https://registry.npmjs.org/', './jasmine-node' ]
19 verbose url resolved https://registry.npmjs.org/jasmine-node
20 info trying registry request attempt 1 at 15:47:58
21 verbose etag "29GDVHJMP63EI2JPIIXYJCW25"
22 http GET https://registry.npmjs.org/jasmine-node
23 http 304 https://registry.npmjs.org/jasmine-node
24 silly registry.get cb [ 304,
24 silly registry.get   { date: 'Sun, 23 Feb 2014 23:48:01 GMT',
24 silly registry.get     server: 'Apache',
24 silly registry.get     connection: 'Keep-Alive',
24 silly registry.get     'keep-alive': 'timeout=10, max=50',
24 silly registry.get     etag: '"29GDVHJMP63EI2JPIIXYJCW25"',
24 silly registry.get     'cache-control': 'max-age=1',
24 silly registry.get     vary: 'Accept' } ]
25 verbose etag jasmine-node from cache
26 silly addNameRange number 2 { name: 'jasmine-node', range: '*', hasData: true }
27 silly addNameRange versions [ 'jasmine-node',
27 silly addNameRange   [ '1.0.1',
27 silly addNameRange     '1.0.2',
27 silly addNameRange     '1.0.3',
27 silly addNameRange     '1.0.4',
27 silly addNameRange     '1.0.5',
27 silly addNameRange     '1.0.6',
27 silly addNameRange     '1.0.7',
27 silly addNameRange     '1.0.8',
27 silly addNameRange     '1.0.9',
27 silly addNameRange     '1.0.10',
27 silly addNameRange     '1.0.11',
27 silly addNameRange     '1.0.12',
27 silly addNameRange     '1.0.13',
27 silly addNameRange     '1.0.15',
27 silly addNameRange     '1.0.16',
27 silly addNameRange     '1.0.17',
27 silly addNameRange     '1.0.18',
27 silly addNameRange     '1.0.19',
27 silly addNameRange     '1.0.20',
27 silly addNameRange     '1.0.21',
27 silly addNameRange     '1.0.22',
27 silly addNameRange     '1.0.23',
27 silly addNameRange     '1.0.24',
27 silly addNameRange     '1.0.25',
27 silly addNameRange     '1.0.26',
27 silly addNameRange     '1.0.27',
27 silly addNameRange     '1.0.28',
27 silly addNameRange     '1.1.0',
27 silly addNameRange     '1.2.0',
27 silly addNameRange     '1.2.1',
27 silly addNameRange     '1.2.2',
27 silly addNameRange     '1.2.3',
27 silly addNameRange     '1.3.0',
27 silly addNameRange     '1.3.1',
27 silly addNameRange     '1.4.0',
27 silly addNameRange     '1.5.0',
27 silly addNameRange     '1.6.0',
27 silly addNameRange     '1.7.0',
27 silly addNameRange     '1.7.1',
27 silly addNameRange     '1.8.0',
27 silly addNameRange     '1.8.1',
27 silly addNameRange     '1.9.0',
27 silly addNameRange     '1.9.1',
27 silly addNameRange     '1.10.0',
27 silly addNameRange     '1.10.1',
27 silly addNameRange     '1.10.2',
27 silly addNameRange     '1.11.0',
27 silly addNameRange     '1.12.0',
27 silly addNameRange     '1.12.1',
27 silly addNameRange     '1.13.0',
27 silly addNameRange     '1.13.1',
27 silly addNameRange     '1.0.0-rc1',
27 silly addNameRange     '1.0.0-rc2',
27 silly addNameRange     '1.0.0-rc3' ] ]
28 verbose addNamed [ 'jasmine-node', '1.13.1' ]
29 verbose addNamed [ '1.13.1', '1.13.1' ]
30 silly lockFile a70483b4-jasmine-node-1-13-1 jasmine-node@1.13.1
31 verbose lock jasmine-node@1.13.1 /home/adminuser/.npm/a70483b4-jasmine-node-1-13-1.lock
32 silly lockFile a70483b4-jasmine-node-1-13-1 jasmine-node@1.13.1
33 silly lockFile a70483b4-jasmine-node-1-13-1 jasmine-node@1.13.1
34 silly lockFile b74de4f8-jasmine-node jasmine-node@
35 silly lockFile b74de4f8-jasmine-node jasmine-node@
36 silly resolved [ { name: 'jasmine-node',
36 silly resolved     version: '1.13.1',
36 silly resolved     description: 'DOM-less simple JavaScript BDD testing framework for Node',
36 silly resolved     contributors: [ [Object] ],
36 silly resolved     homepage: 'https://github.com/mhevery/jasmine-node',
36 silly resolved     repository:
36 silly resolved      { type: 'git',
36 silly resolved        url: 'https://github.com/mhevery/jasmine-node.git' },
36 silly resolved     keywords: [ 'testing', 'bdd' ],
36 silly resolved     author: { name: 'Misko Hevery', email: 'misko@hevery.com' },
36 silly resolved     maintainers: [ [Object], [Object] ],
36 silly resolved     licenses: [ 'MIT' ],
36 silly resolved     dependencies:
36 silly resolved      { 'coffee-script': '>=1.0.1',
36 silly resolved        'jasmine-reporters': '>=0.2.0',
36 silly resolved        'jasmine-growl-reporter': '~0.0.2',
36 silly resolved        requirejs: '>=0.27.1',
36 silly resolved        walkdir: '>= 0.0.1',
36 silly resolved        underscore: '>= 1.3.1',
36 silly resolved        gaze: '~0.3.2',
36 silly resolved        mkdirp: '~0.3.5' },
36 silly resolved     bin: { 'jasmine-node': 'bin/jasmine-node' },
36 silly resolved     preferGlobal: true,
36 silly resolved     main: 'lib/jasmine-node',
36 silly resolved     scripts: { test: 'node lib/jasmine-node/cli.js spec' },
36 silly resolved     devDependencies: {},
36 silly resolved     readme: 'jasmine-node\n======\n\n[![Build Status](https://secure.travis-ci.org/spaghetticode/jasmine-node.png)](http://travis-ci.org/spaghetticode/jasmine-node)\n\nThis node.js module makes the wonderful Pivotal Lab\'s jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\njasmine\n-------\n\nVersion `1.3.1` of Jasmine is currently included with node-jasmine.\n\nwhat\'s new\n----------\n*  Growl notifications with the `--growl` flag (requires Growl to be installed)\n*  Ability to test specs written in Literate Coffee-Script\n*  Teamcity Reporter reinstated.\n*  Ability to specify multiple files to test via list in command line\n*  Ability to suppress stack trace with `--noStack`\n*  Async tests now run in the expected context instead of the global one\n*  `--config` flag that allows you to assign variables to process.env\n*  Terminal Reporters are now available in the Jasmine Object #184\n*  Done is now available in all timeout specs #199\n*  `afterEach` is available in requirejs #179\n*  Editors that replace instead of changing files should work with autotest #198\n*  Jasmine Mock Clock now works!\n*  Autotest now works!\n*  Using the latest Jasmine!\n*  Verbose mode tabs `describe` blocks much more accurately!\n*  `--coffee` now allows specs written in Literate CoffeeScript (`.litcoffee`)\n\ninstall\n------\n\nTo install the latest official version, use NPM:\n\n```sh\nnpm install jasmine-node -g\n```\n\nTo install the latest _bleeding edge_ version, clone this repository and check\nout the `beta` branch.\n\nusage\n------\n\nWrite the specifications for your code in `*.js` and `*.coffee` files in the `spec/` directory.\nYou can use sub-directories to better organise your specs. In the specs use `describe()`, `it()` etc. exactly \nas you would in client-side jasmine specs.\n\n**Note**: your specification files must be named as `*spec.js`, `*spec.coffee` or `*spec.litcoffee`,\nwhich matches the regular expression `/spec\\.(js|coffee|litcoffee)$/i`;\notherwise jasmine-node won\'t find them!\nFor example, `sampleSpecs.js` is wrong, `sampleSpec.js` is right.\n\nIf you have installed the npm package, you can run it with:\n\n```sh\njasmine-node spec/\n```\n\nIf you aren\'t using npm, you should add `pwd`/lib to the `$NODE_PATH`\nenvironment variable, then run:\n\n```sh\nnode lib/jasmine-node/cli.js\n```\n\n\nYou can supply the following arguments:\n\n  * `--autotest`, provides automatic execution of specs after each change\n  * `--watch`, when used with `--autotest`, paths after `--watch` will be\nwatched for changes, allowing to watch for changes outside of specs directory\n  * `--coffee`, allow execution of `.coffee` and `.litcoffee` specs\n  * `--color`, indicates spec output should uses color to\nindicates passing (green) or failing (red) specs\n  * `--noColor`, do not use color in the output\n  * `-m, --match REGEXP`, match only specs comtaining "REGEXPspec"\n  * `--matchall`, relax requirement of "spec" in spec file names\n  * `--verbose`, verbose output as the specs are run\n  * `--junitreport`, export tests results as junitreport xml format\n  * `--output FOLDER`, defines the output folder for junitreport files\n  * `--teamcity`, converts all console output to teamcity custom test runner commands. (Normally auto detected.)\n  * `--growl`, display test run summary in a growl notification (in addition to other outputs)\n  * `--runWithRequireJs`, loads all specs using requirejs instead of node\'s native require method\n  * `--requireJsSetup`, file run before specs to include and configure RequireJS\n  * `--test-dir`, the absolute root directory path where tests are located\n  * `--nohelpers`, does not load helpers\n  * `--forceexit`, force exit once tests complete\n  * `--captureExceptions`, listen to global exceptions, report them and exit (interferes with Domains in NodeJs, so do not use if using Domains as well\n  * `--config NAME VALUE`, set a global variable in `process.env`\n  * `--noStack`, suppress the stack trace generated from a test failure\n\nIndividual files to test can be added as bare arguments to the end of the args.\n\nExample:\n\n```bash\njasmine-node --coffee spec/AsyncSpec.coffee spec/CoffeeSpec.coffee spec/SampleSpec.js\n```\n\nasync tests\n-----------\n\njasmine-node includes an alternate syntax for writing asynchronous tests. Accepting\na done callback in the specification will trigger jasmine-node to run the test\nasynchronously waiting until the `done()` callback is called.\n\n```javascript\nvar request = require(\'request\');\n\nit("should respond with hello world", function(done) {\n  request("http://localhost:3000/hello", function(error, response, body){\n    expect(body).toEqual("hello world");\n    done();\n  });\n});\n```\n\nAn asynchronous test will fail after `5000` ms if `done()` is not called. This timeout\ncan be changed by setting `jasmine.getEnv().defaultTimeoutInterval` or by passing a timeout\ninterval in the specification.\n\n```javascript\nvar request = require(\'request\');\n\nit("should respond with hello world", function(done) {\n  request("http://localhost:3000/hello", function(error, response, body){\n    done();\n  });\n}, 250); // timeout after 250 ms\n```\n\nor\n\n```javascript\nvar request = require(\'request\');\n\njasmine.getEnv().defaultTimeoutInterval = 500;\n\nit("should respond with hello world", function(done) {\n  request("http://localhost:3000/hello", function(error, response, body){\n    done();\n  });  // timeout after 500 ms\n});\n```\n\nCheckout [`spec/SampleSpecs.js`](https://github.com/mhevery/jasmine-node/blob/master/spec/SampleSpecs.js) to see how to use it.\n\n\nrequirejs\n---------\n\nThere is a sample project in `/spec-requirejs`. It is comprised of:\n\n1.  `requirejs-setup.js`, this pulls in our wrapper template (next)\n1.  `requirejs-wrapper-template`, this builds up requirejs settings\n1.  `requirejs.sut.js`, this is a __SU__bject To __T__est, something required by requirejs\n1.  `requirejs.spec.js`, the actual jasmine spec for testing\n\nTo run it:\n\n```sh\nnode lib/jasmine-node/cli.js --runWithRequireJs --requireJsSetup ./spec-requirejs/requirejs-setup.js ./spec-requirejs/\n```\n\nexceptions\n----------\n\nOften you\'ll want to capture an uncaught exception and log it to the console,\nthis is accomplished by using the `--captureExceptions` flag. Exceptions will\nbe reported to the console, but jasmine-node will attempt to recover and\ncontinue. It was decided to not change the current functionality until `2.0`. So,\nuntil then, jasmine-node will still return `0` and continue on without this flag.\n\n### Scenario ###\n\nYou require a module, but it doesn\'t exist, ie `require(\'Q\')` instead of\n`require(\'q\')`. Jasmine-Node reports the error to the console, but carries on\nand returns `0`. This messes up Travis-CI because you need it to return a\nnon-zero status while doing CI tests.\n\n### Mitigation ###\n\nBefore `--captureExceptions`\n\n```sh\n> jasmine-node --coffee spec\n> echo $status\n0\n```\n\nRun jasmine node with the `--captureExceptions` flag.\n\n```sh\n> jasmine-node --coffee --captureExceptions spec\n> echo $status\n1\n```\n\n\ngrowl notifications\n-------------------\n\nJasmine node can display [Growl](http://growl.info) notifications of test\nrun summaries in addition to other reports.\nGrowl must be installed separately, see [node-growl](https://github.com/visionmedia/node-growl)\nfor platform-specific instructions. Pass the `--growl` flag to enable the notifications.\n\n\ndevelopment\n-----------\n\nInstall the dependent packages by running:\n\n```sh\nnpm install\n```\n\nRun the specs before you send your pull request:\n\n```sh\nspecs.sh\n```\n\n__Note:__ Some tests are designed to fail in the specs.sh. After each of the\nindividual runs completes, there is a line that lists what the expected\nPass/Assert/Fail count should be. If you add/remove/edit tests, please be sure\nto update this with your PR.\n\n\nchangelog\n---------\n\n*  _1.13.1_ Add coffee-script support for 1.7.x (thanks to [nathancarter](https://github.com/nathancarter))\n*  _1.13.0_ Added timing to the verbose reporter (thanks to [rick-kilgore](https://github.com/rick-kilgore))\n*  _1.12.1_ Fixed an issue where an undefined variable caused an unhelpful\n   exception in --watch Resolves #278\n*  _1.12.0_\n  *  Changed `util.print` to `stdout.write` (thanks to [nrstott](https://github.com/nrstott))\n  *  Don’t affect line numbers with --requireJsSetup (thanks to [daviddaurelio](https://github.com/davidaurelio))\n  *  Catch errors when loading helpers (thanks to [pimterry](https://github.com/pimterry))\n  *  Keep autotesting until all tests have passed (thanks to [notclive](https://github.com/notclive))\n*  _1.11.0 - Added Growl notification option `--growl` (thanks to\n   [AlphaHydrae](https://github.com/AlphaHydrae))_\n*  _1.10.2 - Restored stack filter which was accidentally removed (thanks to\n   [kevinsawicki](https://github.com/kevinsawicki))_\n*  _1.10.1 - `beforeEach` and `afterEach` now properly handle the async-timeout function_\n*  _1.10.0 - Skipped tests now show in the terminal reporter\'s output (thanks\n   to [kevinsawicki](https://github.com/kevinsawicki))_\n*  _1.9.1 - Timeout now consistent between Async and Non-Async Calls (thanks to\n   [codemnky](https://github.com/codemnky))_\n*  _1.9.0 - Now re-throwing the file-not-found error, added info to README.md,\n   printing version with `--version`_\n*  _1.8.1 - Fixed silent failure due to invalid REGEX (thanks to\n   [pimterry](https://github.com/pimterry))_\n*  _1.8.0 - Fixed bug in autotest with multiple paths and added `--watch` feature\n    (thanks to [davegb3](https://github.com/davegb3))_\n*  _1.7.1 - Removed unneeded fs dependency (thanks to\n   [kevinsawicki](https://github.com/kevinsawicki)) Fixed broken fs call in\n   node `0.6` (thanks to [abe33](https://github.com/abe33))_\n*  _1.7.0 - Literate Coffee-Script now testable (thanks to [magicmoose](https://github.com/magicmoose))_\n*  _1.6.0 - Teamcity Reporter Reinstated (thanks to [bhcleek](https://github.com/bhcleek))_\n*  _1.5.1 - Missing files and require exceptions will now report instead of failing silently_\n*  _1.5.0 - Now takes multiple files for execution. (thanks to [abe33](https://github.com/abe33))_\n*  _1.4.0 - Optional flag to suppress stack trace on test failure (thanks to [Lastalas](https://github.com/Lastalas))_\n*  _1.3.1 - Fixed context for async tests (thanks to [omryn](https://github.com/omryn))_\n*  _1.3.0 - Added `--config` flag for changeable testing environments_\n*  _1.2.3 - Fixed #179, #184, #198, #199. Fixes autotest, afterEach in requirejs, terminal reporter is in jasmine object, done function missing in async tests_\n*  _1.2.2 - Revert Exception Capturing to avoid Breaking Domain Tests_\n*  _1.2.1 - Emergency fix for path reference missing_\n*  _1.2.0 - Fixed #149, #152, #171, #181, #195. `--autotest` now works as expected, jasmine clock now responds to the fake ticking as requested, and removed the path.exists warning_\n*  _1.1.1 - Fixed #173, #169 (Blocks were not indented in verbose properly, added more documentation to address #180_\n*  _1.1.0 - Updated Jasmine to `1.3.1`, fixed fs missing, catching uncaught exceptions, other fixes_\n',
36 silly resolved     readmeFilename: 'README.md',
36 silly resolved     bugs: { url: 'https://github.com/mhevery/jasmine-node/issues' },
36 silly resolved     _id: 'jasmine-node@1.13.1',
36 silly resolved     _from: 'jasmine-node@' } ]
37 info install jasmine-node@1.13.1 into /usr/lib
38 info installOne jasmine-node@1.13.1
39 info /usr/lib/node_modules/jasmine-node unbuild
40 info preuninstall jasmine-node@1.13.1
41 info uninstall jasmine-node@1.13.1
42 verbose true,/usr/lib/node_modules,/usr/lib/node_modules unbuild jasmine-node@1.13.1
43 verbose /usr/bin,[object Object] binRoot
44 info /usr/lib/node_modules/jasmine-node unbuild
45 info preuninstall jasmine-node@1.13.1
46 info uninstall jasmine-node@1.13.1
47 verbose true,/usr/lib/node_modules,/usr/lib/node_modules unbuild jasmine-node@1.13.1
48 verbose /usr/bin,[object Object] binRoot
49 error error rolling back Error: EACCES, unlink '/usr/bin/jasmine-node'
49 error error rolling back  jasmine-node@1.13.1 { [Error: EACCES, unlink '/usr/bin/jasmine-node'] errno: 3, code: 'EACCES', path: '/usr/bin/jasmine-node' }
50 error Error: EACCES, unlink '/usr/bin/jasmine-node'
50 error  { [Error: EACCES, unlink '/usr/bin/jasmine-node'] errno: 3, code: 'EACCES', path: '/usr/bin/jasmine-node' }
51 error Please try running this command again as root/Administrator.
52 error System Linux 3.11.0-15-generic
53 error command "/usr/bin/node" "/usr/bin/npm" "install" "-g" "jasmine-node"
54 error cwd /home/adminuser/Source/NodeRoutes01
55 error node -v v0.10.25
56 error npm -v 1.3.24
57 error path /usr/bin/jasmine-node
58 error code EACCES
59 error errno 3
60 error stack Error: EACCES, unlink '/usr/bin/jasmine-node'
61 verbose exit [ 3, true ]
